#include <stdio.h>
#include <stdlib.h>

struct Stack {
    int size;
    int top;
    int *s;
    };

int isEmpty(struct Stack stack) {
    if(stack.top==-1)
        return 1;
    else
        return 0;
}

int isFull(struct Stack stack) {
    if(stack.top==stack.size-1)
        return 1;
    else
        return 0;
}

int findTop(struct Stack stack) {
    if(stack.top==-1)
        return -1;
    else {
        return stack.s[stack.top];
    }
}

void push(struct Stack *stack, int element) {
    if(stack->top==stack->size-1)
        printf("Overflow");
    else {
        stack->top++;
        stack->s[stack->top]=element;
}
}

void pop(struct Stack *stack) {
    int x;
    if(stack->top==-1)
        printf("Underflow");
    else {
        x=stack->s[stack->top];
        stack->top--;
}
}


void display(struct Stack stack) {
    for(int i=stack.top; i>=0; i--)
        printf("%d ", stack.s[i]);
    printf("\n");
}


int main()
{
    struct Stack stack;
    stack.size=10;
    stack.top=-1;
    stack.s=(int *)malloc(stack.size*sizeof(int));
    display(stack);
    push(&stack, 5);
    push(&stack, 10);
    push(&stack, 15);
    display(stack);
    pop(&stack);
    display(stack);
    printf("%d\n", isFull(stack));
    printf("%d\n", isEmpty(stack));
    printf("Top element is: %d\n", findTop(stack));
    printf("Size of stack is: %d\n", stack.size);
    
}
